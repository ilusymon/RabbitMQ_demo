<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/rabbit
       http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">

    <context:property-placeholder location="classpath:rabbitmq.properties"/>

    <rabbit:connection-factory id="connectionFactory"
                               host="${rabbitmq.host}"
                               port="${rabbitmq.port}"
                               username="${rabbitmq.username}"
                               password="${rabbitmq.password}"
                               virtual-host="${rabbitmq.virtual-host}"
                               publisher-confirms="true"
                               publisher-returns="true"/>

    <!--定义交换机、队列-->

    <rabbit:admin connection-factory="connectionFactory"/>
    <!--定义rabbitTemplate对象操作可以在代码中方便发送消息-->
    <rabbit:template id="rabbitTemplate" connection-factory="connectionFactory"/>

    <!--消息可靠性传递（生产端）-->
    <rabbit:queue id="test_queue_confirm" name="test_queue_confirm"/>
    <rabbit:direct-exchange name="test_exchange_confirm">
        <rabbit:bindings>
            <rabbit:binding queue="test_queue_confirm" key="confirm"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~TTL队列~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    <rabbit:queue id="test_queue_ttl" name="test_queue_ttl">
        <!--queue的参数-->
        <rabbit:queue-arguments>
            <!--
               设置x-message-ttl队列的过期时间
               默认情况下value-type的类型是String类型，但时间的类型是number类型，所以需要设置成integer类型
             -->
            <entry key="x-message-ttl" value="10000" value-type="java.lang.Integer"/>
        </rabbit:queue-arguments>
    </rabbit:queue>
    
    <!--设置交换机-->
    <rabbit:topic-exchange name="test_exchange_ttl">
        <rabbit:bindings>
            <rabbit:binding pattern="ttl.#" queue="test_queue_ttl"/>
        </rabbit:bindings>
    </rabbit:topic-exchange>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~死信队列~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    <!--

        生产者===>>正常交换机===>>正常队列===>>死信交换机===>>死信队列

    -->
    <!--1、设置正常队列test_queue_dlx和交换机test_exchange_dlx-->
    <rabbit:queue name="test_queue_dlx" id="test_queue_dlx">
        <!--3、正常队列绑定死信交换机-->
        <rabbit:queue-arguments>
            <!--3.1设置死信交换机的名字-->
            <entry key="x-dead-letter-exchange" value="exchange_dlx"/>
            <!--3.2 x-dead-letter-routing-key：发送给死信交换机的routingkey-->
            <entry key="x-dead-letter-routing-key" value="dlx.hehe"/>
            <!--4.1 设置队列的过期时间 ttl-->
            <entry key="x-message-ttl" value="10000" value-type="java.lang.Integer"/>
            <!--4.2 设置队列的长度限制 max-length -->
            <entry key="x-max-length" value="10" value-type="java.lang.Integer"/>
        </rabbit:queue-arguments>
        
    </rabbit:queue>

    <!--正常交换机-->
    <rabbit:topic-exchange name="test_exchange_dlx">
        <rabbit:bindings>
            <rabbit:binding pattern="test.dlx.#" queue="test_queue_dlx"/>
        </rabbit:bindings>
    </rabbit:topic-exchange>


    <!--2、声明死信队列queue_dlx和死信交换机exchange_dlx-->
    <rabbit:queue name="queue_dlx" id="queue_dlx"/>
    <rabbit:topic-exchange name="exchange_dlx">
        <rabbit:bindings>
            <rabbit:binding pattern="dlx.#" queue="queue_dlx"/>
        </rabbit:bindings>
    </rabbit:topic-exchange>




    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~延迟队列~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    <!-- 一定要细！！！ -->
    <rabbit:queue id="order_queue" name="order_queue">
        <rabbit:queue-arguments>

            <entry key="x-dead-letter-exchange" value="order_exchange_dlx"/>

            <entry key="x-dead-letter-routing-key" value="dlx.order.cancel"/>

            <entry key="x-message-ttl" value="10000" value-type="java.lang.Long"/>
        </rabbit:queue-arguments>
    </rabbit:queue>

    <rabbit:topic-exchange name="order_exchange">
        <rabbit:bindings>
            <rabbit:binding pattern="order.#" queue="order_queue"/>
        </rabbit:bindings>
    </rabbit:topic-exchange>

    <!--死信交换机队列-->
    <rabbit:queue id="order_queue_dlx" name="order_queue_dlx"/>
    <rabbit:topic-exchange name="order_exchange_dlx">
        <rabbit:bindings>
            <rabbit:binding pattern="dlx.order.#" queue="order_queue_dlx"/>
        </rabbit:bindings>
    </rabbit:topic-exchange>

</beans>